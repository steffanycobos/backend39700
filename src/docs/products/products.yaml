paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos.
      tags:
        - Products
      responses:
        "200":
          description: Todos los productos fueron obtenidos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "401":
          description: Error por falta de permisos
        "500":
          description: Error interno del servidor
    
  /api/products/add:
    post:
      summary: Agrega un nuevo producto.
      tags:
      - Products
      requestBody:
        required: true
        content:
           application/json:
             schema:
              $ref: '#/components/schemas/Product'
      response:
      '200':
         description: Producto agregado.
      '400':
         description: Error al agregar producto.
      '500':
         description: Error interno en el servidor.
     
  /api/products/{pid}:
    get:
      summary: Obtiene producto por ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: pid es el id del producto a obtener.
          schema:
            $type: string
      responses:
        "200":
          description: Producto encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidador.
    delete:
      summary: Elimina un producto del ID dado.
      tags:
      - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: pid es el ID del producto que queremos eliminar.
          schema:
            $type: string
      responses:
        '200':
          description: Producto eliminado.
        '400':
          description: Producto no encontrado.
        '500':
          description: Error interno en el servidor

    put:
      summary: Actualizar producto por id.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: pid el id del producto que se quiere actualizar.
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: El producto se actualizo.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidador.
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID generado por MongoDB.
        title:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descripci贸n del producto.
        price:
          type: number
          description: Precio del producto.
        thumbnail:
          type: string
          description: Imagen del producto.
        code:
          type: string
          description: C贸digo del producto.
        stock:
          type: number
          description: Stock del producto.
        owner:
          type: string
          description: Creador del producto.
      example:
        _id: 64934f532fee8fd1ce51e596
        title: product1
        description: desc1
        price: 300
        thumbnail: "100"
        code: "100"
        stock: 56
        owner: 64933c9f6d7c7a3b5e484e71
  requestBodies:
    updateProduct:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID generado por MongoDB.
        title:
          type: string
          description: product title
        description:
          type: string
          description: product description
        price:
          type: number
          description: product price
        thumbnail:
          type: string
          description: product thumbnail
        code:
          type: string
          description: product code
        stock:
          type: number
          description: product stock
        owner:
          type: string
          description: product owner
      example:
        _id: 64934f532fee8fd1ce51e596
        title: Camisa
        description: Roja
        price: 300
        thumbnail: "Sin Imagen"
        code: "0258"
        stock: 54
        owner: 64933c9f6d7c7a3b5e484e71
    
    addProduct:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID generado por MongoDB.
        title:
          type: string
          description: Descripci贸n del producto.
        price:
          type: number
          description: Precio del producto.
        thumbnail:
          type: string
          description: Imagen del producto.
        code:
          type: string
          description: C贸digo del producto.
        stock:
          type: number
          description: Stock del producto.
        owner:
          type: ObjectId
          description: Creador del producto.
      example:
      _id: 4d64d47dddff47f
      title: Camisa
      description: Azul claro.
      price: 100
      code: '0258'
      stock: 14
      owner: 84hir93834h433k