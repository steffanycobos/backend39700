paths:
  /api/carts/:
    get:
      summary: Obtiene todos los carritos existentes.
      tags:
        - Carts
      responses:
        "200":
          description: Todos los carritos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "401":
          description: Sin autorización para acceder.
        "500":
          description: Error interno en el servidor.
  /api/carts/{cid}:
    get:
      summary: Obtener carrito por ID dado.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el ID del carrito requerido
          schema:
            $type: string
      responses:
        "200":
          description: Carrito encontrado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        "500":
          description: Error interno en el servidor.
    put:
      summary: Actualizar carrito segun su ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el ID del carrito a actualizar.
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateCart"
      responses:
        "200":
          description: Carrito actualizado.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        "500":
          description: Error interno en el servidor.
    delete:
      summary: Elimina el carrito con el ID dado.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          requerid: true
          description: cid es el ID del carrito que se eliminará.
          schema:
            $type: string
      responses:
        '200':
          description: Carrito eliminado.
        '400':
          description: No se encontro el carrito a eliminar.
        '500':
          description: Error interno del servidor.

  /api/carts/{cid}/product/{pid}:
    put:
      summary: Agrega un producto con id PID en el carrito con id CID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es id ID del carrito al que agregaremos productos.
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: pid es el ID del producto que agregaremos.
          schema:
            $type: string
    delete:
      summary: Elimina producto especifico en el carrito.
      tags:
       - Carts
      parameters:
       - name: cid
         in: path
         requerid: true
         description:  cid es id ID del carrito en el que eliminamos productos.
         schema:
           $type: string
       - name: pid
         in: path
         requerid: true
         description:  pid es el producto que vamos a eliminar.
         schema:
           $type: string

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: id generado por Mongo.
        products:
          type: array
          description: Todos los productos en el carrito.

      example:
        _id: 64934f532fee8fd1ce51e596
        products: product1
  requestBodies:
    updateCart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: id generado por Mongo.
        products:
          type: string
          description: Todos los productos en el carrito.
      example:
        _id: 64934f532fee8fd1ce51e596
        products: product1
